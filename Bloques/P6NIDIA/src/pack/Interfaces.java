/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pack;

import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author sebas
 */
public class Interfaces extends javax.swing.JFrame {

    Methods met = new Methods();
    String rute;
    int[] contadores=new int[4];
    int[] contadores_2=new int[4];
    int[] contadores_d=new int[4];
    int[] contadores_d2=new int[4];
    
    public Interfaces() {
        initComponents();
        this.setLocationRelativeTo(null);
        jButtonSelect.setVisible(false);
        jComboBoxMode.setVisible(false);
        jComboBoxMethod.setVisible(false);
        jButtonED.setVisible(false);
        jTextFieldkey.setVisible(false);
        jLabelrestriction.setVisible(false);
        iv_text.setVisible(false);
        for(int i=0;i<4;i++)
        {
            contadores[i]=1;
            contadores_2[i]=1;
            contadores_d[i]=1;
            contadores_d2[i]=1;
        }
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButtonEncrypt = new javax.swing.JRadioButton();
        jRadioButtonDecrypt = new javax.swing.JRadioButton();
        jButtonSelect = new javax.swing.JButton();
        jComboBoxMethod = new javax.swing.JComboBox<String>();
        jComboBoxMode = new javax.swing.JComboBox<String>();
        jButtonED = new javax.swing.JButton();
        jLabelImg = new javax.swing.JLabel();
        jTextFieldkey = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelrestriction = new javax.swing.JLabel();
        Exit = new javax.swing.JButton();
        iv_text = new javax.swing.JTextField();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(jRadioButtonEncrypt);
        jRadioButtonEncrypt.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jRadioButtonEncrypt.setText("Encrypt");
        jRadioButtonEncrypt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonEncryptMouseClicked(evt);
            }
        });
        jRadioButtonEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEncryptActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButtonEncrypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 111, -1, -1));

        buttonGroup1.add(jRadioButtonDecrypt);
        jRadioButtonDecrypt.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jRadioButtonDecrypt.setText("Decrypt");
        jRadioButtonDecrypt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonDecryptMouseClicked(evt);
            }
        });
        getContentPane().add(jRadioButtonDecrypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 148, -1, -1));

        jButtonSelect.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButtonSelect.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/w2.jpg"))); // NOI18N
        jButtonSelect.setText("Select Image");
        jButtonSelect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, 169, 40));

        jComboBoxMethod.setBackground(new java.awt.Color(51, 255, 255));
        jComboBoxMethod.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jComboBoxMethod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please select a cipher", "AES", "DES" }));
        jComboBoxMethod.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxMethodPropertyChange(evt);
            }
        });
        getContentPane().add(jComboBoxMethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, -1, -1));

        jComboBoxMode.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jComboBoxMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please select a mode", "ECB", "CBC", "OFB", "CFB" }));
        getContentPane().add(jComboBoxMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 169, -1));

        jButtonED.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButtonED.setForeground(new java.awt.Color(255, 255, 255));
        jButtonED.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/w2.jpg"))); // NOI18N
        jButtonED.setText("E/D");
        jButtonED.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEDActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonED, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 180, 169, 40));

        jLabelImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImg.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        getContentPane().add(jLabelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 374, 203));

        jTextFieldkey.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jTextFieldkey.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldkey.setText("Insert your key");
        jTextFieldkey.setNextFocusableComponent(jButtonED);
        jTextFieldkey.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldkeyFocusGained(evt);
            }
        });
        jTextFieldkey.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldkeyKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldkeyKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldkey, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 220, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Josue Ruiz Hernandez");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 180, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cryptography");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 49, 140, -1));

        jLabelrestriction.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        jLabelrestriction.setForeground(new java.awt.Color(255, 255, 255));
        jLabelrestriction.setText("Restriction");
        getContentPane().add(jLabelrestriction, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 70, -1));

        Exit.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        Exit.setForeground(new java.awt.Color(255, 255, 255));
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/w2.jpg"))); // NOI18N
        Exit.setText("Exit");
        Exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        getContentPane().add(Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 370, 169, 40));

        iv_text.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        iv_text.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        iv_text.setText("Tipe IV");
        iv_text.setNextFocusableComponent(jButtonED);
        iv_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                iv_textFocusGained(evt);
            }
        });
        iv_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                iv_textKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                iv_textKeyTyped(evt);
            }
        });
        getContentPane().add(iv_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 220, 30));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/w1.jpg"))); // NOI18N
        getContentPane().add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEncryptActionPerformed
        
    }//GEN-LAST:event_jRadioButtonEncryptActionPerformed

    private void jRadioButtonDecryptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonDecryptMouseClicked
        jButtonSelect.setVisible(true);
        jComboBoxMethod.setVisible(true);
        jTextFieldkey.setVisible(true);
        iv_text.setVisible(true);
        if (jRadioButtonEncrypt.isSelected()) {
            jButtonED.setVisible(true);
            jButtonED.setText("ENCRYPT");
            jComboBoxMode.setVisible(false);
        }else{
            jButtonED.setVisible(true);
            jButtonED.setText("DECRYPT");
            jComboBoxMode.setVisible(true);
        }
    }//GEN-LAST:event_jRadioButtonDecryptMouseClicked

    private void jRadioButtonEncryptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonEncryptMouseClicked
        jButtonSelect.setVisible(true);
        jComboBoxMethod.setVisible(true);
        jTextFieldkey.setVisible(true);
        iv_text.setVisible(true);
        if (jRadioButtonEncrypt.isSelected()) {
            jButtonED.setVisible(true);
            jButtonED.setText("ENCRYPT");
            jComboBoxMode.setVisible(false);
            
        }else{
            jButtonED.setVisible(true);
            jButtonED.setText("DECRYPT");
            jComboBoxMode.setVisible(true);
        }
    }//GEN-LAST:event_jRadioButtonEncryptMouseClicked

    private void jButtonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectActionPerformed
        rute = met.rute();
        try {
            met.showImg(rute, jLabelImg);
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_jButtonSelectActionPerformed

    private String dameElNombre(String tipo,String modo,int contador)
    {
        String ruta_abs="C:\\Users\\josue\\Documents\\Criptography\\Bloques\\P6NIDIA\\Imagenes\\";
        String nombre_ar=tipo+"_"+modo+"_"+Integer.toString(contador)+".bmp";
        ruta_abs+=nombre_ar;
        return ruta_abs;
    }
    private void jButtonEDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEDActionPerformed
        StringBuilder menu = new StringBuilder();
        menu.append("Choose the operation mode:\n");
        menu.append("1. ECB\n");
        menu.append("2. CBC\n");
        menu.append("3. OFB\n");
        menu.append("4. CFB\n");
        
        
        String iv_key=iv_text.getText();
        String j=jTextFieldkey.getText();
        
        if (jRadioButtonEncrypt.isSelected()) {
            switch (jComboBoxMethod.getSelectedIndex()) {
                case 1:            
                    if(j.length()==16 && iv_key.length()==16)
                    {
                        try {
                        int opcion=Integer.parseInt(JOptionPane.showInputDialog(menu.toString()));
                        if(opcion==1)
                        {
                            String salida=dameElNombre("aes","ecb",contadores[0]);
                            met.encrypt(rute, salida, "AES", "AES/ECB/PKCS5Padding", jTextFieldkey.getText());   
                            contadores[0]++;
                        }
                       
                        if(opcion==2)
                        {
                            String salida=dameElNombre("aes","cbc",contadores[1]);
                            met.encrypt(rute,salida, "AES", "AES/CBC/PKCS5Padding", jTextFieldkey.getText(), iv_key);
                            contadores[1]++;
                        }
                       
                        if(opcion==3)
                        {
                            String salida=dameElNombre("aes","ofb",contadores[2]);
                            met.encrypt(rute, salida, "AES", "AES/OFB/PKCS5Padding", jTextFieldkey.getText(),iv_key);
                            contadores[2]++;
                        }
                        
                        if(opcion==4)
                        {
                            String salida=dameElNombre("aes","cbf",contadores[3]);
                            met.encrypt(rute,salida, "AES", "AES/CFB/PKCS5Padding", jTextFieldkey.getText(),iv_key);
                            contadores[3]++;
                        }
                        
                        if(opcion>4)
                            JOptionPane.showMessageDialog(null,"Sorry, try again");
                        
                        JOptionPane.showMessageDialog(this, "We encrypt very well <3");
                    } catch (Exception ex) {
                        //System.out.println(ex.getMessage());
                        JOptionPane.showMessageDialog(null,"Bad padding bro, check your image");
                    }   break;
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"Check your key and IV length please");
                        break;
                    }
                case 2:
                    if(j.length()==8 && iv_key.length()==8)
                    {
                        try {
                        int opcion=Integer.parseInt(JOptionPane.showInputDialog(menu.toString()));
                        if(opcion==1)
                        {
                            String salida=dameElNombre("des","ecb",contadores_2[0]);
                            met.encryptDES(rute,salida, "DES", "DES/ECB/PKCS5Padding", jTextFieldkey.getText());
                            contadores_2[0]++;
                        }
                        
                        if(opcion==2)
                        {
                            String salida=dameElNombre("des","cbc",contadores_2[1]);
                            met.encryptDES(rute,salida, "DES", "DES/CBC/PKCS5Padding", jTextFieldkey.getText(),iv_key);
                            contadores_2[1]++;
                        }
                        
                        if(opcion==3)
                        {
                            String salida = dameElNombre("des","ofb",contadores_2[2]);
                            met.encryptDES(rute,salida, "DES", "DES/OFB/PKCS5Padding", jTextFieldkey.getText(),iv_key);
                            contadores_2[2]++;
                        }
                        
                        if(opcion==4)
                        {
                            String salida=dameElNombre("des","cfb",contadores_2[3]);
                            met.encryptDES(rute,salida, "DES", "DES/CFB/PKCS5Padding", jTextFieldkey.getText(), iv_key);
                            contadores_2[3]++;
                        }
          
                        if(opcion>4)
                            JOptionPane.showMessageDialog(null,"Sorry, try again");
                        
                        JOptionPane.showMessageDialog(this, "We encrypt very well <3");
                    } catch (Exception ex) {
                        //System.out.println(ex.getMessage());
                        JOptionPane.showMessageDialog(null,"Bad padding bro, check your image");
                    }   break;
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"Sorri, check the length of your key and IV");
                        break;
                    }
                    
                default:
                    JOptionPane.showMessageDialog(this, "SELECT MODE", "OOOOOOOOOOPS", JOptionPane.ERROR_MESSAGE);
                    break;
            }
        }else{
            switch (jComboBoxMethod.getSelectedIndex()) {
                case 1:
                    if(j.length()==16 && iv_key.length()==16)
                    {
                        String msg="You are trying to decrypt an image that was crypted with a diferent mode of operation, decrypt it with the same operation mode please";
                        switch (jComboBoxMode.getSelectedIndex()) {
                        case 1:
                            try {
                                String salida=dameElNombre("decrypt_aes","ecb",contadores_d[0]);
                                met.decrypt(rute,salida, "AES", "AES/ECB/PKCS5Padding", jTextFieldkey.getText());
                                contadores_d[0]++;
                                JOptionPane.showMessageDialog(this, "We decrypt very well <3");
                            } catch (Exception ex) {
                                System.err.println(ex.toString());
                                JOptionPane.showMessageDialog(this,msg);
                            }
                            break;
                        case 2:
                            try {
                                String salida=dameElNombre("decrypt_aes","cbc",contadores_d[1]);
                                met.decrypt(rute,salida, "AES", "AES/CBC/PKCS5Padding", jTextFieldkey.getText(), "0123456789ABCDEF");
                                contadores_d[1]++;
                                JOptionPane.showMessageDialog(this, "We decrypt very well <3");
                            } catch (Exception ex) {
                                System.err.println(ex.toString());
                                JOptionPane.showMessageDialog(this, msg);
                            }
                            break;
                        case 3:
                            try {
                                String salida=dameElNombre("decrypt_aes","ofb",contadores_d[2]);
                                met.decrypt(rute, salida, "AES", "AES/OFB/PKCS5Padding", jTextFieldkey.getText(), "0123456789ABCDEF");
                                contadores_d[2]++;
                                JOptionPane.showMessageDialog(this, "We decrypt very well <3");
                            } catch (Exception ex) {
                                System.err.println(ex.toString());
                                JOptionPane.showMessageDialog(this,msg);
                            }
                            break;
                        case 4:
                            try {
                                String salida=dameElNombre("decrypt_aes","cfb",contadores_d[3]);
                                met.decrypt(rute, salida, "AES", "AES/CFB/PKCS5Padding", jTextFieldkey.getText(), "0123456789ABCDEF");
                                contadores_d[3]++;
                                JOptionPane.showMessageDialog(this, "We decrypt very well <3");
                            } catch (Exception ex) {
                                System.err.println(ex.toString());
                                JOptionPane.showMessageDialog(this,msg);
                            }
                            break;
                        default:
                            JOptionPane.showMessageDialog(this, "SELECT A MODE", "OOOOOOOOOOPS", JOptionPane.ERROR_MESSAGE);
                            break;
                    }break;
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"Sorry, check the length of your key and IV");
                        break;
                    }
                    
                    
                case 2:
                    if(j.length()==8 && iv_key.length()==8)
                    {
                        String msg="You are trying to decrypt an image that was crypted with a diferent mode of operation, decrypt it with the same operation mode please";
                        switch (jComboBoxMode.getSelectedIndex()) {
                        case 1:
                            try {
                                String salida=dameElNombre("decrypt_des","ecb",contadores_d2[0]);
                                met.decryptDES(rute, salida, "DES", "DES/ECB/PKCS5Padding ", jTextFieldkey.getText());
                                contadores_d2[0]++;
                                JOptionPane.showMessageDialog(this, "We decrypt very well <3");
                            } catch (Exception ex) {
                                System.err.println(ex.toString());
                                JOptionPane.showMessageDialog(this, msg);
                            }
                            break;
                        case 2:
                            try {
                                String salida=dameElNombre("decrypt_des","cbc",contadores_d2[1]);
                                met.decryptDES(rute, salida, "DES", "DES/CBC/PKCS5Padding ", jTextFieldkey.getText(), "01234567");
                                contadores_d2[1]++;
                                JOptionPane.showMessageDialog(this, "We decrypt very well <3");
                            } catch (Exception ex) {
                                System.err.println(ex.toString());
                                JOptionPane.showMessageDialog(this,msg);
                            }
                            break;
                        case 3:
                            try {
                                String salida=dameElNombre("decrypt_des","ofb",contadores_d2[2]);
                                met.decryptDES(rute, salida, "DES", "DES/OFB/PKCS5Padding ", jTextFieldkey.getText(), "01234567");
                                contadores_d2[2]++;
                                JOptionPane.showMessageDialog(this, "We decrypt very well <3");
                            } catch (Exception ex) {
                                System.err.println(ex.toString());
                                JOptionPane.showMessageDialog(this, msg);
                            }
                            break;
                        case 4:
                            try {
                                String salida=dameElNombre("decrypt_des","cfb",contadores_d2[3]);
                                met.decryptDES(rute, salida, "DES", "DES/CFB/PKCS5Padding ", jTextFieldkey.getText(), "01234567");
                                contadores_d2[3]++;
                                JOptionPane.showMessageDialog(this, "We decrypt very well <3");
                            } catch (Exception ex) {
                                System.err.println(ex.toString());
                                JOptionPane.showMessageDialog(this,msg);
                            }
                            break;
                        default:
                            JOptionPane.showMessageDialog(this, "SELECT MODE", "OOOOOOOOOOOPS", JOptionPane.ERROR_MESSAGE);
                            break;
                    }break;
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"Sorry, check the length of your key and IV");
                        break;
                    }
                    
                default:
                    JOptionPane.showMessageDialog(this, "SELECT MODE", "OOOOOOOOOOPS", JOptionPane.ERROR_MESSAGE);
                    break;
            }
        }
    }//GEN-LAST:event_jButtonEDActionPerformed

    private void jTextFieldkeyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldkeyKeyPressed
        
    }//GEN-LAST:event_jTextFieldkeyKeyPressed

    private void jTextFieldkeyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldkeyKeyTyped
        
    }//GEN-LAST:event_jTextFieldkeyKeyTyped

    private void jTextFieldkeyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldkeyFocusGained
        jTextFieldkey.setText("");
    }//GEN-LAST:event_jTextFieldkeyFocusGained

    private void jComboBoxMethodPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxMethodPropertyChange
        if(jComboBoxMethod.getSelectedIndex()==1){
            jTextFieldkey.setVisible(true);
            jLabelrestriction.setVisible(true);
            jLabelrestriction.setText("Set the key beautiful person");
        }else if (jComboBoxMethod.getSelectedIndex()==2) {
            jTextFieldkey.setVisible(true);
            jLabelrestriction.setVisible(true);
            jLabelrestriction.setText("Set the key beautiful person");
        }
        
    }//GEN-LAST:event_jComboBoxMethodPropertyChange

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void iv_textFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_iv_textFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_iv_textFocusGained

    private void iv_textKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iv_textKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_iv_textKeyPressed

    private void iv_textKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iv_textKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_iv_textKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaces().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit;
    private javax.swing.JLabel Fondo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField iv_text;
    private javax.swing.JButton jButtonED;
    private javax.swing.JButton jButtonSelect;
    private javax.swing.JComboBox<String> jComboBoxMethod;
    private javax.swing.JComboBox<String> jComboBoxMode;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelImg;
    private javax.swing.JLabel jLabelrestriction;
    private javax.swing.JRadioButton jRadioButtonDecrypt;
    private javax.swing.JRadioButton jRadioButtonEncrypt;
    private javax.swing.JTextField jTextFieldkey;
    // End of variables declaration//GEN-END:variables
}
